
> maharashtra-survey-backend@1.0.0 dev
> nodemon src/server.js

[33m[nodemon] 3.1.10[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching path(s): *.*[39m
[33m[nodemon] watching extensions: js,mjs,cjs,json[39m
[32m[nodemon] starting `node src/server.js`[39m
Executing (default): SELECT 1+1 AS result
âœ“ Database connection established successfully
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'users'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_users_role' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'users' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'users' AND tc.table_catalog = 'maharashtra_survey_db'
Executing (default): ALTER TABLE "users" ALTER COLUMN "employee_id" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "employee_id" DROP DEFAULT;ALTER TABLE "users"  ADD UNIQUE ("employee_id");ALTER TABLE "users" ALTER COLUMN "employee_id" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "users" ALTER COLUMN "first_name" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "first_name" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "first_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "last_name" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "last_name" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "last_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "email" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "email" DROP DEFAULT;ALTER TABLE "users"  ADD UNIQUE ("email");ALTER TABLE "users" ALTER COLUMN "email" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "users" ALTER COLUMN "phone" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "phone" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "password" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "password" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "password" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "role" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "role" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_users_role" AS ENUM(''admin'', ''municipal_officer'', ''engineer'', ''field_executive''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "users" ALTER COLUMN "role" TYPE "public"."enum_users_role" USING ("role"::"public"."enum_users_role");
Executing (default): ALTER TABLE "users" ALTER COLUMN "department" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "department" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "department" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "assigned_area" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "assigned_area" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "assigned_area" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "users" ALTER COLUMN "is_active" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "is_active" SET DEFAULT true;ALTER TABLE "users" ALTER COLUMN "is_active" TYPE BOOLEAN;
Executing (default): ALTER TABLE "users" ALTER COLUMN "last_login" DROP NOT NULL;ALTER TABLE "users" ALTER COLUMN "last_login" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "last_login" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "users" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "users" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "users" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "users" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'users' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'properties'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_properties_property_type' GROUP BY 1
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_properties_construction_type' GROUP BY 1
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_properties_survey_status' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'properties' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'properties' AND tc.table_catalog = 'maharashtra_survey_db'
Executing (default): ALTER TABLE "properties" ALTER COLUMN "survey_number" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "survey_number" DROP DEFAULT;ALTER TABLE "properties"  ADD UNIQUE ("survey_number");ALTER TABLE "properties" ALTER COLUMN "survey_number" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "property_id" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "property_id" DROP DEFAULT;ALTER TABLE "properties"  ADD UNIQUE ("property_id");ALTER TABLE "properties" ALTER COLUMN "property_id" TYPE VARCHAR(255)  ;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "owner_name" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "owner_name" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "owner_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "owner_father_name" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "owner_father_name" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "owner_father_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "owner_phone" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "owner_phone" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "owner_phone" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "owner_email" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "owner_email" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "owner_email" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "house_number" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "house_number" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "house_number" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "street_name" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "street_name" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "street_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "locality" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "locality" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "locality" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "ward_number" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "ward_number" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "ward_number" TYPE INTEGER;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "pincode" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "pincode" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "pincode" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "property_type" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "property_type" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_properties_property_type" AS ENUM(''residential'', ''commercial'', ''industrial'', ''mixed'', ''institutional''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "properties" ALTER COLUMN "property_type" TYPE "public"."enum_properties_property_type" USING ("property_type"::"public"."enum_properties_property_type");
Executing (default): ALTER TABLE "properties" ALTER COLUMN "construction_type" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "construction_type" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_properties_construction_type" AS ENUM(''pucca'', ''semi_pucca'', ''kutcha''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "properties" ALTER COLUMN "construction_type" TYPE "public"."enum_properties_construction_type" USING ("construction_type"::"public"."enum_properties_construction_type");
Executing (default): ALTER TABLE "properties" ALTER COLUMN "construction_year" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "construction_year" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "construction_year" TYPE INTEGER;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "number_of_floors" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "number_of_floors" SET DEFAULT 1;ALTER TABLE "properties" ALTER COLUMN "number_of_floors" TYPE INTEGER;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "plot_area" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "plot_area" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "plot_area" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "built_up_area" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "built_up_area" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "built_up_area" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "carpet_area" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "carpet_area" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "carpet_area" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "water_connection" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "water_connection" SET DEFAULT false;ALTER TABLE "properties" ALTER COLUMN "water_connection" TYPE BOOLEAN;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "electricity_connection" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "electricity_connection" SET DEFAULT false;ALTER TABLE "properties" ALTER COLUMN "electricity_connection" TYPE BOOLEAN;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "sewage_connection" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "sewage_connection" SET DEFAULT false;ALTER TABLE "properties" ALTER COLUMN "sewage_connection" TYPE BOOLEAN;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "latitude" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "latitude" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "latitude" TYPE DECIMAL(10,8);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "longitude" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "longitude" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "longitude" TYPE DECIMAL(11,8);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "property_value" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "property_value" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "property_value" TYPE DECIMAL(12,2);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "annual_tax" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "annual_tax" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "annual_tax" TYPE DECIMAL(10,2);
Executing (default): ALTER TABLE "properties" ALTER COLUMN "assessment_year" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "assessment_year" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "assessment_year" TYPE INTEGER;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "survey_status" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "survey_status" SET DEFAULT 'draft';DO 'BEGIN CREATE TYPE "public"."enum_properties_survey_status" AS ENUM(''draft'', ''submitted'', ''under_review'', ''approved'', ''rejected''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "properties" ALTER COLUMN "survey_status" TYPE "public"."enum_properties_survey_status" USING ("survey_status"::"public"."enum_properties_survey_status");
Executing (default): ALTER TABLE "properties" ALTER COLUMN "remarks" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "remarks" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "remarks" TYPE TEXT;
Executing (default): ALTER TABLE "properties" DROP CONSTRAINT "properties_reviewed_by_fkey"
Executing (default): ALTER TABLE "properties" DROP CONSTRAINT "properties_surveyed_by_fkey"
Executing (default): ALTER TABLE "properties" ALTER COLUMN "surveyed_by" SET NOT NULL;ALTER TABLE "properties"  ADD FOREIGN KEY ("surveyed_by") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "properties"  ADD FOREIGN KEY ("reviewed_by") REFERENCES "users" ("id") ON DELETE SET NULL ON UPDATE CASCADE;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "survey_date" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "survey_date" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "survey_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "review_date" DROP NOT NULL;ALTER TABLE "properties" ALTER COLUMN "review_date" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "review_date" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "properties" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "properties" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "properties" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'properties' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
Executing (default): SELECT table_name FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'property_images'
Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_property_images_image_type' GROUP BY 1
Executing (default): SELECT pk.constraint_type as "Constraint",c.column_name as "Field", c.column_default as "Default",c.is_nullable as "Null", (CASE WHEN c.udt_name = 'hstore' THEN c.udt_name ELSE c.data_type END) || (CASE WHEN c.character_maximum_length IS NOT NULL THEN '(' || c.character_maximum_length || ')' ELSE '' END) as "Type", (SELECT array_agg(e.enumlabel) FROM pg_catalog.pg_type t JOIN pg_catalog.pg_enum e ON t.oid=e.enumtypid WHERE t.typname=c.udt_name) AS "special", (SELECT pgd.description FROM pg_catalog.pg_statio_all_tables AS st INNER JOIN pg_catalog.pg_description pgd on (pgd.objoid=st.relid) WHERE c.ordinal_position=pgd.objsubid AND c.table_name=st.relname) AS "Comment" FROM information_schema.columns c LEFT JOIN (SELECT tc.table_schema, tc.table_name, cu.column_name, tc.constraint_type FROM information_schema.TABLE_CONSTRAINTS tc JOIN information_schema.KEY_COLUMN_USAGE  cu ON tc.table_schema=cu.table_schema and tc.table_name=cu.table_name and tc.constraint_name=cu.constraint_name and tc.constraint_type='PRIMARY KEY') pk ON pk.table_schema=c.table_schema AND pk.table_name=c.table_name AND pk.column_name=c.column_name WHERE c.table_name = 'property_images' AND c.table_schema = 'public'
Executing (default): SELECT DISTINCT tc.constraint_name as constraint_name, tc.constraint_schema as constraint_schema, tc.constraint_catalog as constraint_catalog, tc.table_name as table_name,tc.table_schema as table_schema,tc.table_catalog as table_catalog,tc.initially_deferred as initially_deferred,tc.is_deferrable as is_deferrable,kcu.column_name as column_name,ccu.table_schema  AS referenced_table_schema,ccu.table_catalog  AS referenced_table_catalog,ccu.table_name  AS referenced_table_name,ccu.column_name AS referenced_column_name FROM information_schema.table_constraints AS tc JOIN information_schema.key_column_usage AS kcu ON tc.constraint_name = kcu.constraint_name JOIN information_schema.constraint_column_usage AS ccu ON ccu.constraint_name = tc.constraint_name WHERE constraint_type = 'FOREIGN KEY' AND tc.table_name = 'property_images' AND tc.table_catalog = 'maharashtra_survey_db'
Executing (default): ALTER TABLE "property_images" DROP CONSTRAINT "property_images_property_id_fkey"
Executing (default): ALTER TABLE "property_images" ALTER COLUMN "property_id" SET NOT NULL;ALTER TABLE "property_images"  ADD FOREIGN KEY ("property_id") REFERENCES "properties" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "property_images" ALTER COLUMN "image_type" SET NOT NULL;ALTER TABLE "property_images" ALTER COLUMN "image_type" DROP DEFAULT;DO 'BEGIN CREATE TYPE "public"."enum_property_images_image_type" AS ENUM(''front_view'', ''side_view'', ''back_view'', ''interior'', ''documents'', ''other''); EXCEPTION WHEN duplicate_object THEN null; END';ALTER TABLE "property_images" ALTER COLUMN "image_type" TYPE "public"."enum_property_images_image_type" USING ("image_type"::"public"."enum_property_images_image_type");
Executing (default): ALTER TABLE "property_images" ALTER COLUMN "file_name" SET NOT NULL;ALTER TABLE "property_images" ALTER COLUMN "file_name" DROP DEFAULT;ALTER TABLE "property_images" ALTER COLUMN "file_name" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "property_images" ALTER COLUMN "file_path" SET NOT NULL;ALTER TABLE "property_images" ALTER COLUMN "file_path" DROP DEFAULT;ALTER TABLE "property_images" ALTER COLUMN "file_path" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "property_images" ALTER COLUMN "file_size" SET NOT NULL;ALTER TABLE "property_images" ALTER COLUMN "file_size" DROP DEFAULT;ALTER TABLE "property_images" ALTER COLUMN "file_size" TYPE INTEGER;
Executing (default): ALTER TABLE "property_images" ALTER COLUMN "mime_type" SET NOT NULL;ALTER TABLE "property_images" ALTER COLUMN "mime_type" DROP DEFAULT;ALTER TABLE "property_images" ALTER COLUMN "mime_type" TYPE VARCHAR(255);
Executing (default): ALTER TABLE "property_images" ALTER COLUMN "description" DROP NOT NULL;ALTER TABLE "property_images" ALTER COLUMN "description" DROP DEFAULT;ALTER TABLE "property_images" ALTER COLUMN "description" TYPE TEXT;
Executing (default): ALTER TABLE "property_images" DROP CONSTRAINT "property_images_uploaded_by_fkey"
Executing (default): ALTER TABLE "property_images" ALTER COLUMN "uploaded_by" SET NOT NULL;ALTER TABLE "property_images"  ADD FOREIGN KEY ("uploaded_by") REFERENCES "users" ("id") ON DELETE CASCADE ON UPDATE CASCADE;
Executing (default): ALTER TABLE "property_images" ALTER COLUMN "created_at" SET NOT NULL;ALTER TABLE "property_images" ALTER COLUMN "created_at" DROP DEFAULT;ALTER TABLE "property_images" ALTER COLUMN "created_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): ALTER TABLE "property_images" ALTER COLUMN "updated_at" SET NOT NULL;ALTER TABLE "property_images" ALTER COLUMN "updated_at" DROP DEFAULT;ALTER TABLE "property_images" ALTER COLUMN "updated_at" TYPE TIMESTAMP WITH TIME ZONE;
Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'property_images' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
âœ“ Database models synchronized
Uncaught Exception: Error: listen EADDRINUSE: address already in use :::3000
    at Server.setupListenHandle [as _listen2] (node:net:1902:16)
    at listenInCluster (node:net:1959:12)
    at Server.listen (node:net:2061:7)
    at Function.listen (/Users/vijay-vyawhare/explore/backend/node_modules/express/lib/application.js:635:24)
    at startServer (/Users/vijay-vyawhare/explore/backend/src/server.js:144:9)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5) {
  code: 'EADDRINUSE',
  errno: -48,
  syscall: 'listen',
  address: '::',
  port: 3000
}
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
node:events:498
      throw er; // Unhandled 'error' event
      ^

Error: read EIO
    at TTY.onStreamRead (node:internal/stream_base_commons:218:20)
Emitted 'error' event on ReadStream instance at:
    at emitErrorNT (node:internal/streams/destroy:170:8)
    at emitErrorCloseNT (node:internal/streams/destroy:129:3)
    at process.processTicksAndRejections (node:internal/process/task_queues:82:21) {
  errno: -5,
  code: 'EIO',
  syscall: 'read'
}

Node.js v22.5.1
